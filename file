services:
 postgres:
  container_name: postgres_db
  image: postgres
  environment:
   - POSTGRES_PASSWORD=postgres
   - POSTGRES_USER=postgres
   - POSTGRES_DB=test
  volumes:
   - ./pgdata:/var/lib/postgresql/data
  ports:
   - "6432:5432"
  healthcheck:
   test: [ "CMD-SHELL", "pg_isready -U postgres -d test" ]
   interval: 10s
   timeout: 5s
   retries: 5
   start_period: 10s
  restart: unless-stopped

docker-compose.yml

from sqlalchemy import create_engine, select, update, delete, insert
from sqlalchemy.orm import (
    DeclarativeBase,
    Mapped,
    mapped_column,
    sessionmaker,
)


class Base(DeclarativeBase):
    pass


class User(Base):  # Model -> Table
    __tablename__ = 'users'

    id: Mapped[int] = mapped_column(primary_key=True)
    name: Mapped[str] = mapped_column(nullable=False)
    password: Mapped[str] = mapped_column(nullable=False)
    email: Mapped[str] = mapped_column(unique=True, nullable=False)

    age: Mapped[int]


# Создание движка
engine = create_engine(
    url="postgresql://postgres:postgres@localhost:6432/test",
    echo=True,
)

SessionLocal = sessionmaker(bind=engine)

# Создание всех таблиц
Base.metadata.create_all(bind=engine)

# Вставка данных
with SessionLocal() as session:
    # INSERT INTO users (name, password, email, age) VALUES (...);
    statement = insert(User).values(
        name="User1",
        password="user1",
        email="user@gmail.com",
        age=13,
    )

    result = session.execute(statement)  # Исправлено
    session.commit()  # Завершаем транзакцию
    print(result)  # Результат выполнения запроса

# SQL Query
# SELECT * FROM user;
# INSERT
# UPDATE
# DELETE
